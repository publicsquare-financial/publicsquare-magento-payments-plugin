#!/usr/bin/env bash
[ -z "$1" ] && echo "Please specify a domain (ex. mydomain.test)" && exit

# Generate certificate authority if not already setup
if ! docker compose exec -T -u root web cat /root/.local/share/mkcert/rootCA.pem | grep -q 'BEGIN CERTIFICATE'; then
  set -o errexit

  docker compose exec -T -u root web apt-get update
  docker compose exec -T -u root web apt-get install -y curl
  docker compose exec -T -u root web sh -c 'curl -JLO "https://dl.filippo.io/mkcert/latest?for=linux/amd64" && chmod +x mkcert-v*-linux-amd64 && mv mkcert-v*-linux-amd64 /usr/local/bin/mkcert'
  docker compose exec -T -u root web mkcert -install
  docker cp "$(docker compose ps -q web|awk '{print $1}')":/root/.local/share/mkcert/rootCA.pem .
fi

# Generate the certificate for the specified domain
DOMAIN_WITHOUT_PORT=$(echo "$@" | cut -d ':' -f1)
docker compose exec -T -u root web mkcert -key-file nginx.key -cert-file nginx.crt "$DOMAIN_WITHOUT_PORT"
echo "Moving key and cert to /etc/nginx/certs/..."
docker compose exec -T -u root web chown www-data:www-data nginx.key nginx.crt
docker compose exec -T -u root web mv nginx.key nginx.crt /etc/nginx/certs/

# Restart nginx to webly the updates
echo "Restarting containers to webly updates..."
bin/stop
bin/start
